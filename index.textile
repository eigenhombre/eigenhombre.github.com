---
layout: page
title: Software
tagline: ... and other things that should be as simple as possible, but not simpler.
---
{% include JB/setup %}

!images/jj.jpg!

<span style="font-size: 14pt;">Welcome to the technical blog of *John Jacobsen*</span>, a software developer currently living in Chicago, IL.

I have created software for more than two decades, mostly working in the field of *high energy physics* and *particle astrophysics*.  My current specialty is distributed, Web-based applications for scientific computing, though I have done a fair amount of low level software engineering (Linux device drivers and embedded systems), as well as data mining/analysis and simulation.

For the past ten years I have worked primarily for clients on the "IceCube Neutrino Telescope":http://icecube.wisc.edu, the world's largest detector of astrophysical neutrinos, which was recently constructed at Amundsen-Scott South Pole Station.  For the last five of these years, my biggest project has been as the lead programmer and architect of the IceCube Experiment Control and Monitoring system, known as *IceCube Live*.  This distributed system, created in Python and hosted at the South Pole and in Madison, Wisconsin, welds together a heterogeneous collection of subsystems together across a network of 200 or so servers at a data center at the Pole, and, using modern Web application tools, provides interactive sites used by detector operators, subsystem experts and data analysts in both hemispheres to control the instrument and to understand its current and historical performance.

In the course of my career I have traveled ten times to the South Pole and have written "extensive blog posts":http://johnj.com/pole about the experience.

I like to write *elegant, powerful, maintainable code*.  Generally this means striving for "simplicity":http://bit.ly/simple-made-easy whenever possible.  When practical, I practice iterative, test-driven development and fully-automated deployment workflows with frequent releases.  I have deep and extensive experience with Python, though I have recently been very enthusiastic about Clojure, a Lisp-based functional language implemented on top of the JVM and in JavaScript, and have worked on "two":https://github.com/eigenhombre/PyClojure "implementations":https://github.com/halgari/clojure-py of Clojure in Python.

Other interests include Machine Learning, logic programming ("MiniKanren":http://kanren.sourceforge.net/, "core.logic":https://github.com/clojure/core.logic), AI in general, and creating visualization tools (I am currently working on "a JavaScript charting library":https://github.com/eigenhombre/i3d3 using D3.js).  I'm also an on-again, off-again "visual artist":http://johnj.com (painting, drawing and photography).

The site for my "consulting business":http://npxdesigns.com has more details.  See also:

* "GitHub":http://github.com/eigenhombre, where I host multiple open source projects and contribute to several others;
* "StackOverflow":http://stackoverflow.com/users/611752/johnj, where I answer questions about Python and Clojure;
* "@eigenhombre":http://twitter.com/eigenhombre on Twitter;
* My "LinkedIn":http://linkedin.com/in/eigenhombre profile;
* My physics/computing "curriculum vitae":https://github.com/eigenhombre/cv.

<iframe src="http://ghbtns.com/github-btn.html?user=eigenhombre&type=follow"
  allowtransparency="true" frameborder="0" scrolling="0" width="150px" height="25px"></iframe>

Occasionally I will post about various side projects on the following blog.  I also "tweet about various obsessions, software or otherwise":https://twitter.com/eigenhombre.

<a href="https://twitter.com/eigenhombre"
class="twitter-follow-button" data-show-count="false">Follow
@eigenhombre</a> <script src="//platform.twitter.com/widgets.js"
type="text/javascript"></script>


h2. Blog Posts

<ul class="posts">
  {% for post in site.posts %}
    {% if post.draft != true %}
      <li>
        <span>{{ post.date | date_to_string }}</span> &raquo;
        <a href="{{ BASE_PATH }}{{ post.url }}">{{ post.title }}</a>
      </li>
    {% endif %}
  {% endfor %}
</ul>
